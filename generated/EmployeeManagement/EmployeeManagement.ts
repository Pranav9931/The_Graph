// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddEmployee extends ethereum.Event {
  get params(): AddEmployee__Params {
    return new AddEmployee__Params(this);
  }
}

export class AddEmployee__Params {
  _event: AddEmployee;

  constructor(event: AddEmployee) {
    this._event = event;
  }

  get employeeAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fName(): string {
    return this._event.parameters[1].value.toString();
  }

  get lName(): string {
    return this._event.parameters[2].value.toString();
  }

  get salary(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get vestingPeriod(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get employeeAvatar(): string {
    return this._event.parameters[5].value.toString();
  }

  get isVested(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get startTime(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get department(): string {
    return this._event.parameters[8].value.toString();
  }
}

export class DelEmployee extends ethereum.Event {
  get params(): DelEmployee__Params {
    return new DelEmployee__Params(this);
  }
}

export class DelEmployee__Params {
  _event: DelEmployee;

  constructor(event: DelEmployee) {
    this._event = event;
  }

  get employeeAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Payment extends ethereum.Event {
  get params(): Payment__Params {
    return new Payment__Params(this);
  }
}

export class Payment__Params {
  _event: Payment;

  constructor(event: Payment) {
    this._event = event;
  }

  get employeeAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EmployeeManagement__allMilestoneResultValue0Struct extends ethereum.Tuple {
  get from(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get department(): string {
    return this[2].toString();
  }

  get reason(): string {
    return this[3].toString();
  }
}

export class EmployeeManagement__employeeResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: BigInt;
  value4: BigInt;
  value5: string;
  value6: boolean;
  value7: BigInt;
  value8: BigInt;
  value9: string;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: BigInt,
    value4: BigInt,
    value5: string,
    value6: boolean,
    value7: BigInt,
    value8: BigInt,
    value9: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromString(this.value9));
    return map;
  }

  getEmployeeAddress(): Address {
    return this.value0;
  }

  getFName(): string {
    return this.value1;
  }

  getLName(): string {
    return this.value2;
  }

  getSalary(): BigInt {
    return this.value3;
  }

  getVestingPeriod(): BigInt {
    return this.value4;
  }

  getEmployeeAvatar(): string {
    return this.value5;
  }

  getIsVested(): boolean {
    return this.value6;
  }

  getStartTime(): BigInt {
    return this.value7;
  }

  getVestedAmount(): BigInt {
    return this.value8;
  }

  getDepartment(): string {
    return this.value9;
  }
}

export class EmployeeManagement__getAllEmployeesResultValue0Struct extends ethereum.Tuple {
  get employeeAddress(): Address {
    return this[0].toAddress();
  }

  get fName(): string {
    return this[1].toString();
  }

  get lName(): string {
    return this[2].toString();
  }

  get salary(): BigInt {
    return this[3].toBigInt();
  }

  get vestingPeriod(): BigInt {
    return this[4].toBigInt();
  }

  get employeeAvatar(): string {
    return this[5].toString();
  }

  get isVested(): boolean {
    return this[6].toBoolean();
  }

  get startTime(): BigInt {
    return this[7].toBigInt();
  }

  get vestedAmount(): BigInt {
    return this[8].toBigInt();
  }

  get department(): string {
    return this[9].toString();
  }
}

export class EmployeeManagement__getAllTransactionsResultValue0Struct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get from(): Address {
    return this[1].toAddress();
  }

  get time(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get typeOfTransaction(): string {
    return this[4].toString();
  }

  get description(): string {
    return this[5].toString();
  }
}

export class EmployeeManagement__milestonesResult {
  value0: Address;
  value1: BigInt;
  value2: string;
  value3: string;

  constructor(value0: Address, value1: BigInt, value2: string, value3: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    return map;
  }

  getFrom(): Address {
    return this.value0;
  }

  getAmount(): BigInt {
    return this.value1;
  }

  getDepartment(): string {
    return this.value2;
  }

  getReason(): string {
    return this.value3;
  }
}

export class EmployeeManagement__transactionsResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: string;
  value5: string;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: string,
    value5: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    return map;
  }

  getTo(): Address {
    return this.value0;
  }

  getFrom(): Address {
    return this.value1;
  }

  getTime(): BigInt {
    return this.value2;
  }

  getAmount(): BigInt {
    return this.value3;
  }

  getTypeOfTransaction(): string {
    return this.value4;
  }

  getDescription(): string {
    return this.value5;
  }
}

export class EmployeeManagement extends ethereum.SmartContract {
  static bind(address: Address): EmployeeManagement {
    return new EmployeeManagement("EmployeeManagement", address);
  }

  addEmployee(
    _employeeAddress: Address,
    _fName: string,
    _lName: string,
    _salary: BigInt,
    _vestingPeriod: BigInt,
    _employeeAvatar: string,
    _department: string
  ): BigInt {
    let result = super.call(
      "addEmployee",
      "addEmployee(address,string,string,uint256,uint256,string,string):(uint256)",
      [
        ethereum.Value.fromAddress(_employeeAddress),
        ethereum.Value.fromString(_fName),
        ethereum.Value.fromString(_lName),
        ethereum.Value.fromUnsignedBigInt(_salary),
        ethereum.Value.fromUnsignedBigInt(_vestingPeriod),
        ethereum.Value.fromString(_employeeAvatar),
        ethereum.Value.fromString(_department)
      ]
    );

    return result[0].toBigInt();
  }

  try_addEmployee(
    _employeeAddress: Address,
    _fName: string,
    _lName: string,
    _salary: BigInt,
    _vestingPeriod: BigInt,
    _employeeAvatar: string,
    _department: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addEmployee",
      "addEmployee(address,string,string,uint256,uint256,string,string):(uint256)",
      [
        ethereum.Value.fromAddress(_employeeAddress),
        ethereum.Value.fromString(_fName),
        ethereum.Value.fromString(_lName),
        ethereum.Value.fromUnsignedBigInt(_salary),
        ethereum.Value.fromUnsignedBigInt(_vestingPeriod),
        ethereum.Value.fromString(_employeeAvatar),
        ethereum.Value.fromString(_department)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allMilestone(): Array<EmployeeManagement__allMilestoneResultValue0Struct> {
    let result = super.call(
      "allMilestone",
      "allMilestone():((address,uint256,string,string)[])",
      []
    );

    return result[0].toTupleArray<
      EmployeeManagement__allMilestoneResultValue0Struct
    >();
  }

  try_allMilestone(): ethereum.CallResult<
    Array<EmployeeManagement__allMilestoneResultValue0Struct>
  > {
    let result = super.tryCall(
      "allMilestone",
      "allMilestone():((address,uint256,string,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        EmployeeManagement__allMilestoneResultValue0Struct
      >()
    );
  }

  businessDevBudget(): BigInt {
    let result = super.call(
      "businessDevBudget",
      "businessDevBudget():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_businessDevBudget(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "businessDevBudget",
      "businessDevBudget():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  companyOwner(): Address {
    let result = super.call("companyOwner", "companyOwner():(address)", []);

    return result[0].toAddress();
  }

  try_companyOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("companyOwner", "companyOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createMilestones(_idx: BigInt, _amount: BigInt, _reason: string): BigInt {
    let result = super.call(
      "createMilestones",
      "createMilestones(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_idx),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromString(_reason)
      ]
    );

    return result[0].toBigInt();
  }

  try_createMilestones(
    _idx: BigInt,
    _amount: BigInt,
    _reason: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createMilestones",
      "createMilestones(uint256,uint256,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_idx),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromString(_reason)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  employee(param0: BigInt): EmployeeManagement__employeeResult {
    let result = super.call(
      "employee",
      "employee(uint256):(address,string,string,uint256,uint256,string,bool,uint256,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new EmployeeManagement__employeeResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toString(),
      result[6].toBoolean(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toString()
    );
  }

  try_employee(
    param0: BigInt
  ): ethereum.CallResult<EmployeeManagement__employeeResult> {
    let result = super.tryCall(
      "employee",
      "employee(uint256):(address,string,string,uint256,uint256,string,bool,uint256,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EmployeeManagement__employeeResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toString(),
        value[6].toBoolean(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toString()
      )
    );
  }

  getAllEmployees(): Array<
    EmployeeManagement__getAllEmployeesResultValue0Struct
  > {
    let result = super.call(
      "getAllEmployees",
      "getAllEmployees():((address,string,string,uint256,uint256,string,bool,uint256,uint256,string)[])",
      []
    );

    return result[0].toTupleArray<
      EmployeeManagement__getAllEmployeesResultValue0Struct
    >();
  }

  try_getAllEmployees(): ethereum.CallResult<
    Array<EmployeeManagement__getAllEmployeesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllEmployees",
      "getAllEmployees():((address,string,string,uint256,uint256,string,bool,uint256,uint256,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        EmployeeManagement__getAllEmployeesResultValue0Struct
      >()
    );
  }

  getAllTransactions(): Array<
    EmployeeManagement__getAllTransactionsResultValue0Struct
  > {
    let result = super.call(
      "getAllTransactions",
      "getAllTransactions():((address,address,uint256,uint256,string,string)[])",
      []
    );

    return result[0].toTupleArray<
      EmployeeManagement__getAllTransactionsResultValue0Struct
    >();
  }

  try_getAllTransactions(): ethereum.CallResult<
    Array<EmployeeManagement__getAllTransactionsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllTransactions",
      "getAllTransactions():((address,address,uint256,uint256,string,string)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        EmployeeManagement__getAllTransactionsResultValue0Struct
      >()
    );
  }

  itBudget(): BigInt {
    let result = super.call("itBudget", "itBudget():(uint256)", []);

    return result[0].toBigInt();
  }

  try_itBudget(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("itBudget", "itBudget():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketingBudget(): BigInt {
    let result = super.call(
      "marketingBudget",
      "marketingBudget():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_marketingBudget(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "marketingBudget",
      "marketingBudget():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  milestones(param0: BigInt): EmployeeManagement__milestonesResult {
    let result = super.call(
      "milestones",
      "milestones(uint256):(address,uint256,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new EmployeeManagement__milestonesResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toString(),
      result[3].toString()
    );
  }

  try_milestones(
    param0: BigInt
  ): ethereum.CallResult<EmployeeManagement__milestonesResult> {
    let result = super.tryCall(
      "milestones",
      "milestones(uint256):(address,uint256,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EmployeeManagement__milestonesResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toString(),
        value[3].toString()
      )
    );
  }

  numberOfEmployees(): BigInt {
    let result = super.call(
      "numberOfEmployees",
      "numberOfEmployees():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfEmployees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfEmployees",
      "numberOfEmployees():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberOfMilestones(): BigInt {
    let result = super.call(
      "numberOfMilestones",
      "numberOfMilestones():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfMilestones(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfMilestones",
      "numberOfMilestones():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  numberOfTransactions(): BigInt {
    let result = super.call(
      "numberOfTransactions",
      "numberOfTransactions():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfTransactions(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfTransactions",
      "numberOfTransactions():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operationsBudget(): BigInt {
    let result = super.call(
      "operationsBudget",
      "operationsBudget():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_operationsBudget(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "operationsBudget",
      "operationsBudget():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalBalance(): BigInt {
    let result = super.call("totalBalance", "totalBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalBalance", "totalBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transactions(param0: BigInt): EmployeeManagement__transactionsResult {
    let result = super.call(
      "transactions",
      "transactions(uint256):(address,address,uint256,uint256,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new EmployeeManagement__transactionsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toString(),
      result[5].toString()
    );
  }

  try_transactions(
    param0: BigInt
  ): ethereum.CallResult<EmployeeManagement__transactionsResult> {
    let result = super.tryCall(
      "transactions",
      "transactions(uint256):(address,address,uint256,uint256,string,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EmployeeManagement__transactionsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toString(),
        value[5].toString()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddEmployeeCall extends ethereum.Call {
  get inputs(): AddEmployeeCall__Inputs {
    return new AddEmployeeCall__Inputs(this);
  }

  get outputs(): AddEmployeeCall__Outputs {
    return new AddEmployeeCall__Outputs(this);
  }
}

export class AddEmployeeCall__Inputs {
  _call: AddEmployeeCall;

  constructor(call: AddEmployeeCall) {
    this._call = call;
  }

  get _employeeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _lName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _salary(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _vestingPeriod(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _employeeAvatar(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _department(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class AddEmployeeCall__Outputs {
  _call: AddEmployeeCall;

  constructor(call: AddEmployeeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateMilestonesCall extends ethereum.Call {
  get inputs(): CreateMilestonesCall__Inputs {
    return new CreateMilestonesCall__Inputs(this);
  }

  get outputs(): CreateMilestonesCall__Outputs {
    return new CreateMilestonesCall__Outputs(this);
  }
}

export class CreateMilestonesCall__Inputs {
  _call: CreateMilestonesCall;

  constructor(call: CreateMilestonesCall) {
    this._call = call;
  }

  get _idx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateMilestonesCall__Outputs {
  _call: CreateMilestonesCall;

  constructor(call: CreateMilestonesCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PayEmployeeCall extends ethereum.Call {
  get inputs(): PayEmployeeCall__Inputs {
    return new PayEmployeeCall__Inputs(this);
  }

  get outputs(): PayEmployeeCall__Outputs {
    return new PayEmployeeCall__Outputs(this);
  }
}

export class PayEmployeeCall__Inputs {
  _call: PayEmployeeCall;

  constructor(call: PayEmployeeCall) {
    this._call = call;
  }

  get _index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayEmployeeCall__Outputs {
  _call: PayEmployeeCall;

  constructor(call: PayEmployeeCall) {
    this._call = call;
  }
}

export class PayMilestoneCall extends ethereum.Call {
  get inputs(): PayMilestoneCall__Inputs {
    return new PayMilestoneCall__Inputs(this);
  }

  get outputs(): PayMilestoneCall__Outputs {
    return new PayMilestoneCall__Outputs(this);
  }
}

export class PayMilestoneCall__Inputs {
  _call: PayMilestoneCall;

  constructor(call: PayMilestoneCall) {
    this._call = call;
  }

  get _idx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayMilestoneCall__Outputs {
  _call: PayMilestoneCall;

  constructor(call: PayMilestoneCall) {
    this._call = call;
  }
}

export class PayrollCall extends ethereum.Call {
  get inputs(): PayrollCall__Inputs {
    return new PayrollCall__Inputs(this);
  }

  get outputs(): PayrollCall__Outputs {
    return new PayrollCall__Outputs(this);
  }
}

export class PayrollCall__Inputs {
  _call: PayrollCall;

  constructor(call: PayrollCall) {
    this._call = call;
  }
}

export class PayrollCall__Outputs {
  _call: PayrollCall;

  constructor(call: PayrollCall) {
    this._call = call;
  }
}
